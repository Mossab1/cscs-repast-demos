Index: src/stupidmodel/observer/BugStyleOGL2D.java
===================================================================
--- src/stupidmodel/observer/BugStyleOGL2D.java	(revision 784)
+++ src/stupidmodel/observer/BugStyleOGL2D.java	(working copy)
@@ -20,11 +20,6 @@
  * white (when size is zero) to red (when size is 10 or greater).
  * </p>
  * 
- * <p>
- * <i>The original bound scheme was a bit modified: since white agents cannot be
- * seen on empty cells, so we use light red if size is zero.</i>
- * </p>
- * 
  * @author Richard O. Legendi (richard.legendi)
  * @since 2.0-beta, 2011
  * @version $Id: BugStyleOGL2D.java 183 2011-05-29 17:09:27Z
@@ -44,7 +39,7 @@
 	 *            the agent whose color should be determined; <i>may be null</i>
 	 * @return the color for the specified {@link Bug} agent created as
 	 *         <code>new Color(0xFF, strength, strength)</code> (where
-	 *         <code>strength = 200 - 20 * size of the bug</code>); <i>or
+	 *         <code>strength = 255 - size of the bug</code>); <i>or
 	 *         <code>Color.BLUE</code> if the parameter was <code>null</code>
 	 *         </i>
 	 * @see repast.simphony.visualizationOGL2D.DefaultStyleOGL2D#getColor(java.lang.Object)
@@ -54,9 +49,12 @@
 		if (agent instanceof Bug) {
 			final Bug bug = (Bug) agent;
 
-			assert (bug.getSize() >= 0) : String
-					.format("An agent's size property should be non-negative, but its current value is %f.",
-							bug.getSize());
+			if (bug.getSize() < 0) {
+				throw new IllegalStateException(
+						String.format(
+								"An agent's size property should be non-negative, but its current value is %f.",
+								bug.getSize()));
+			}
 
 			final int strength = (int) Math.max(200 - 20 * bug.getSize(), 0);
 			return new Color(0xFF, strength, strength); // 0xFFFFFF - white,
Index: src/stupidmodel/observer/FoodValueLayerStyleOGL.java
===================================================================
--- src/stupidmodel/observer/FoodValueLayerStyleOGL.java	(revision 784)
+++ src/stupidmodel/observer/FoodValueLayerStyleOGL.java	(working copy)
@@ -20,7 +20,7 @@
  * 
  * <p>
  * A cell's color on the display is shaded to reflect the food available on
- * them: it shades from white (when available food is zero) to green (when food
+ * them: it shades from black (when available food is zero) to green (when food
  * is <code>1</code> or greater).
  * </p>
  * 
@@ -99,8 +99,8 @@
 							food));
 		}
 
-		final int strength = (int) Math.max(255 - 200 * food, 0);
-		return new Color(strength, 0xFF, strength); // 0xFFFFFF - white,
-													// 0x00FF00 - green
+		final int strength = (int) Math.min(200 * food, 255);
+		return new Color(0, strength, 0); // 0x000000 - black,
+											// 0x00FF00 - green
 	}
 }
